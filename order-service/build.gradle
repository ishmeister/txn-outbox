plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.avast.gradle.docker-compose' version '0.17.5'
}

group = 'dev.hashnode.ishbhana'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.5.5.Final"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation "org.springframework.boot:spring-boot-starter-webflux"
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:rabbitmq'
    testImplementation 'org.assertj:assertj-core:3.26.3'
    testImplementation 'org.awaitility:awaitility:4.2.0'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    // Omit the version number from the archive name to simplify docker image build
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

springBoot {
    mainClass = 'dev.hashnode.ishbhana.order.OrderServiceApplication'
    buildInfo()
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags "integration"
    }
    testLogging.events "skipped", "failed"
}


